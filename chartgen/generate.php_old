<?php

//echo "<pre>";
//error_reporting(E_ALL);
//ini_set('display_errors',1);
@session_start();
$data = $_SESSION['lastGeneratedGraphData'];

if (!is_array($data)) {
    die("Cannot get data. Did you press generate before downloading ?");
}
//start editing data 
$oldSheetContents = file_get_contents(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/worksheets/sheet1.xml');
$oldSheetContents = file_get_contents(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/worksheets/sheet1.xml');
$oldSharedStringContents = file_get_contents(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/sharedStrings.xml');
$oldChartContents = file_get_contents(dirname(__FILE__). '/10/ppt/charts/chart1.xml');

$newChartContents = $oldChartContents;
$newSheetContents = $oldSheetContents;
$newSharedStringContents = $oldSharedStringContents;

$title = urldecode($_POST['presentationTitle']);
$newChartContents = str_replace('Series 1',$title,$newChartContents);
$newSharedStringContents = str_replace('Series 1',$title,$newSharedStringContents);

foreach ($data as $key=>$value) {
    $newSheetContents = str_replace('label'.$key,$value['short_name'],$newSheetContents);
    $newSharedStringContents = str_replace('label'.$key,$value['short_name'],$newSharedStringContents);
    $newChartContents = str_replace('label'.$key,$value['short_name'],$newChartContents);
    $newSheetContents = str_replace('33532'.$key,$value['value'],$newSheetContents);
    $newChartContents = str_replace('33532'.$key,$value['value'],$newChartContents);
    
}

$fpSheet = fopen(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/worksheets/sheet1.xml','w+');
fwrite($fpSheet,$newSheetContents);
fclose($fpSheet);

$fpSharedStrings = fopen(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/sharedStrings.xml','w+');
fwrite($fpSharedStrings,$newSharedStringContents);
fclose($fpSharedStrings);


$fpChart = fopen(dirname(__FILE__). '/10/ppt/charts/chart1.xml','w+');
fwrite($fpChart,$newChartContents);
fclose($fpChart); 
 
 
Zip('excel' . DIRECTORY_SEPARATOR .'10' . DIRECTORY_SEPARATOR .'Microsoft_Office_Excel_Worksheet1','10' . DIRECTORY_SEPARATOR .'ppt' . DIRECTORY_SEPARATOR .'embeddings' . DIRECTORY_SEPARATOR .'Microsoft_Office_Excel_Worksheet1.xlsx');

$presentationName = 'chart' . time() . rand(1, 999) . ".pptx";
Zip('10',$presentationName);


@unlink('10' . DIRECTORY_SEPARATOR .'ppt' . DIRECTORY_SEPARATOR .'embeddings' . DIRECTORY_SEPARATOR .'Microsoft_Office_Excel_Worksheet1.xlsx');
$fpSheet = fopen(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/worksheets/sheet1.xml','w+');
fwrite($fpSheet, $oldSheetContents);
fclose($fpSheet);

$fpChart = fopen(dirname(__FILE__). '/10/ppt/charts/chart1.xml','w+');
fwrite($fpChart,$oldChartContents);
fclose($fpChart);       
 
$fpSharedStrings = fopen(dirname(__FILE__). '/excel/10/Microsoft_Office_Excel_Worksheet1/xl/sharedStrings.xml','w+');
fwrite($fpSharedStrings,$oldSharedStringContents);
fclose($fpSharedStrings);


header("Pragma: public"); // required
header("Expires: 0");
header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
header("Cache-Control: private",false); // required for certain browsers
header("Content-Type: application/vnd.openxmlformats-officedocument.presentationml.presentation");
// change, added quotes to allow spaces in filenames, by Rajkumar Singh
header("Content-Disposition: attachment; filename=\"".basename($presentationName)."\";" );
header("Content-Transfer-Encoding: binary");
header("Content-Length: ".filesize($presentationName));
readfile("$presentationName");
@unlink($presentationName);   
       
       
       
function Zip($source, $destination)
{
    if (extension_loaded('zip') === true)
    {
        if (file_exists($source) === true)
        {
                $zip = new ZipArchive();

                if ($zip->open($destination, ZIPARCHIVE::CREATE) === true)
                {
                        //$source = realpath($source);

                        if (is_dir($source) === true)
                        {

                                $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($source), RecursiveIteratorIterator::LEAVES_ONLY);
                                foreach ($files as $fullFileName => $file)
                                {                               
                                        $file = $fullFileName;
                                        if (is_dir($file) === true)
                                        {
                                                $zip->addEmptyDir($emptyName =  str_replace($source , '', $file . '/'));
                                        }

                                        else if (is_file($file) === true)
                                        {

                                            $file2 = str_replace($source , '', $file);
                                            if (substr($file2,0,1) == "/" OR substr($file2,0,1) == '\\')
                                                $file2 = substr($file2,1,strlen($file2));
                                            //echo $file2 . PHP_EOL;
                                                $zip->addFromString($file2, file_get_contents($file));
                                        }
                                }
                        }

                        else if (is_file($source) === true)
                        {
                                $zip->addFromString(basename($source), file_get_contents($source));
                        }
                } else {
                    echo "Cannot zip the $destination";
                }

                return $zip->close();
        } else {
            echo "Source ($source) Not found";
        }
    }

    return false;
}